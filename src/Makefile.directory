# assumes that the including makefile will define
# TARGETS
# PATH_TO_SRC
# NAME
# and optionally for git versions
VERSIONS ?= orig 3c-em-orig manual revert-em-manual 3c-revert-em-manual


%:
	for target in $(TARGETS) ; do \
		(cd $$target && \
		make $@) ; \
	done

convert:
	for target in $(TARGETS) ; do \
		(cd $$target && \
		make $@) ; \
	done

test bear_test:
	for target in $(TARGETS) ; do \
		(cd $$target && \
		make $@) || exit 1; \
	done

git-% test-%:
	for target in $(TARGETS) ; do \
		(cd $$target && \
		make $@) || exit 1; \
	done

git_diffs: 
	NAME=$(NAME) VERSIONS="$(VERSIONS)" $(PATH_TO_SRC)create_git_diffs.sh

stats:
	# generate the stats
	for target in $(TARGETS) ; do \
		(cd $$target && \
		make stats) ; \
		true; \
	done
	# combine the stats
	mkdir workdir 2> /dev/null
	for program in $(TARGETS); do \
	  $(PATH_TO_SRC)genfinal.py $$program; true; \
	done
	cat workdir/*.csv > final.csv
	#NAME=$(NAME) TARGETS="$(TARGETS)" $(PATH_TO_SRC)combine_stats.sh

clean: clean-tmp clean-em clean-revert clean-3c clean_objs clean_progs clean_diffs clean_reports clean_bear

clean_reports:
	for target in $(TARGETS) ; do \
		(cd $$target && \
		make $@) ; \
	done
	$(RM) -dr workdir
	$(RM) final.tex final.txt final.csv

clean_diffs:
	for target in $(TARGETS) ; do \
		(cd $$target && \
		make $@) ; \
	done
	$(RM) diffs.dat diffs.sum
	$(RM) -dr git-changes

