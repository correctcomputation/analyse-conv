# assumes that the including makefile will define
# -------------
# HDRS
# SOURCES
# PROG
# OUTPUT
# PATH_TO_SRC

# and optionally
# --------------
# RUN_OPTIONS
# CFLAGS
# LDFLAGS
override THREEC_FLAGS += $(addprefix -extra-arg-before=,$(CFLAGS))
STDIN_FILENAME ?= /dev/stdin
VERSIONS ?= orig manual 3c-manual 3c-em-orig revert-em-manual 3c-revert-em-manual

# also requires tools
# -------------------
# CC
# C3
# THREEC
# THREEC_WORKTREE

.SECONDARY: %.c %.h

convert:
	for $ver in $(VERSIONS) ; do \
		make $$ver ; \
	done

# make revert-<version>
#	converts checkedc sources and headers in <version> to regular c

revert-%: %
	$(RM) -rf tmp-$@
	mkdir tmp-$@
	for src in $(HDRS) $(SOURCES) ; do \
		$(C3) -f $*/$$src > tmp-revert-$*/$$src || exit 1; \
	done
	$(RM) -rf $@
	mv tmp-$@ $@


# make em-<version>
#   expands macros in <version> sources and headers

em-%: %
	$(RM) -rf tmp-$@
	mkdir tmp-$@
	cp $(addprefix $*/,$(HDRS)) $(addprefix $*/,$(SOURCES)) tmp-$@
	bear --cdb tmp-$@/compile_commands.json make $(addprefix tmp-$@/,$(SOURCES:.c=.o))
# The macro expander removes comments, including the special /**/ comments that
# we insert in some code to work around
# https://github.com/correctcomputation/C3/issues/10 . Maybe the macro expander
# shouldn't remove comments in general, but for now, we just temporarily hide
# the /**/ from it.
	sed -i 's,/\*\*/,C3_BLOCKER,' $(addprefix tmp-$@/,$(HDRS)) $(addprefix tmp-$@/,$(SOURCES))
# See https://correct-computation.slack.com/archives/G01GKGKHMFD/p1619280418048000?thread_ts=1619278307.042100&cid=G01GKGKHMFD
	(cd tmp-$@ && $(THREEC_WORKTREE)/clang/tools/3c/utils/port_tools/convert_project.py -dr --expand_macros_before_conversion -pr .)
	sed -i 's,C3_BLOCKER,/**/,' $(addprefix tmp-$@/,$(HDRS)) $(addprefix tmp-$@/,$(SOURCES))
	$(RM) -rf $@
	mkdir $@
	cp $(addprefix tmp-$@/,$(HDRS)) $(addprefix tmp-$@/,$(SOURCES)) $@


# make 3c-<version> (and 3c-stats-<version>)
#	converts sources and headers in <version> to checkedc, and generates stats

3c_stats-%.json: 3c-%
	:

3c-%: %
	$(RM) -rf tmp-$@
	$(THREEC) -alltypes -dump-stats -stats-output=3c_stats-$*.json -base-dir=$* -output-dir=tmp-$@ \
		$(THREEC_FLAGS) $(addprefix $*/,$(SOURCES)) --
	cp -r -n $*/* tmp-$@
	$(RM) -rf $@
	mv tmp-$@ $@

# make <prog>_<version>
#	compile sources into an executable

$(addprefix %/,$(SOURCES)) : %
	:

.SECONDEXPANSION:
$(addprefix %/,$(SOURCES:.c=.o)): $($$(@:.o=.c)

$(PROG)_%: $$(addprefix %/,$(SOURCES:.c=.o))
	$(CC) -o $@ $(addprefix $*/,$(SOURCES:.c=.o)) $(LDFLAGS)


test:
	for ver in $(VERSIONS) ; do \
		make test-$$ver || exit 1; \
	done

test-%: $(PROG)_%
	./$< $(RUN_OPTIONS) < $(STDIN_FILENAME) > ACTUAL_OUTPUT 2>&1
	diff -w $(OUTPUT) ACTUAL_OUTPUT
	$(RM) ACTUAL_OUTPUT

# We need to at least clean-objs to ensure that the compilation database is
# complete. We also need missing-files.sh to run _before_ we start adding build
# products to the `orig` and `revert` subdirectories.
bear-test: clean-objs clean-progs convert
# Don't propagate errors for this.
	-for v in orig tweak manual revert 3c-orig 3c-tweak 3c-revert; do \
	  if [[ $$v =~ tweak$$ ]] && ! [ -d tweak ]; then continue; fi; \
	  bear --cdb $$v/compile_commands.json make -k test-$$v 2>&1 | tee $$v/build.log || : ; \
	done

git-diffs: 
	NAME=$(PROG) $(PATH_TO_SRC)create-git-diffs.sh

git-orig:
	mkdir -p git-changes
	cp orig/* git-changes/

git-%:
	cp $*/* git-changes/

add-git:
	git add git-changes/*

stats: diffs.dat

diffs.dat diffs.sum: clean-objs
	NAME=$(PROG) $(PATH_TO_SRC)create-stats.sh

clean: clean-tmp clean-em clean-revert clean-3c clean-diffs clean-reports

clean-tmp:
	$(RM) -r tmp-*

clean-em:
	$(RM) -r em-*
	$(RM) $(PROG)_em-*

clean-revert:
	$(RM) -r revert-*
	$(RM) $(PROG)_revert-*

clean-3c:
	$(RM) -r 3c-*
	$(RM) $(PROG)_3c-*

clean-objs:
	find . -type f -name '*.o' -exec rm {} +

clean-progs:
	$(RM) $(PROG)_*

clean-reports:
	$(RM) -dr workdir
	$(RM) final.csv

clean-diffs:
	$(RM) diffs.dat diffs.sum final.csv
	$(RM) -dr git-changes
	$(RM) 3c_stats-* PerWildPtrStats.json WildPtrStats.json

